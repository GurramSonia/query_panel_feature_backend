apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: query-panel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      tolerations:
        - key: "node-role"
          operator: "Equal"
          value: "worker"
          effect: "NoSchedule"
      containers:
        - name: mongo
          #image: 683819934378.dkr.ecr.us-east-1.amazonaws.com/query-panel:mongo
          image: mongo:latest
          #image: soniagurramavari/query-panel-mongo:v6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_INITDB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_USERNAME
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc # Reference your PVC here

---

apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: query-panel
spec:
  selector:
    app: mongo
  type: ClusterIP
  #type: NodePort
  #type: LoadBalancer
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      #nodePort: 30017 
  

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: query-panel
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  #storageClassName: gp3# Adjust the storage size as needed
  storageClassName: local-path-retain  # Adjust the storage size as needed
